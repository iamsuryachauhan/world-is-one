/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode ReverseKGroup(ListNode head, int k) { //this program is for linklist only......................
        if(head == null)
          return null;
        ListNode root = new ListNode(0,head);
        ListNode cur = head;
        ListNode prev = root;
        
        
        while(cur != null){
            ListNode tail = cur;
            int listIndex = 0;
            
            while(cur!=null && listIndex<k){
                cur = cur.next;
                listIndex++;
            }
            if(listIndex!=k){
                prev.next = tail;
            }else{
                prev.next = reverse(tail,k);
                prev = tail;
            }
            
        }
        return root.next;        
    }
    private ListNode reverse(ListNode head, int k){
        ListNode prev = null;
        ListNode curr = head;
        ListNode next = null;
        while(curr!=null && k-->0){
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        head = prev;
        return head;
    }
}
